# -*- coding: utf-8 -*-
"""Lab 1 19-06-23.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14AAzLdNFlFCZJ8f9YHhtkerepHUoGo1z
"""

def open_dataset():
    file = open('/content/bank.csv', 'r')
    data = file.readlines()
    return data

def headers(data):
    headers = data[0].strip().split(';')
    print("Headers in the file:")
    for header in headers:
        print(header)

def count_of_customers_by_marital_category(data):
    married_count = 0
    single_count = 0
    divorced_count = 0

    for i in data:
        col = i.split(';')
        marital = col[2].strip('"')
        if marital == 'married':
            married_count += 1
        elif marital == 'single':
            single_count += 1
        elif marital == 'divorced':
            divorced_count += 1

    print("Marital Categories:")
    print("Married:", married_count)
    print("Single:", single_count)
    print("Divorced:", divorced_count)

def prepare_age_histogram(data):
    # Prepare a histogram for age
    ages = []
    for line in data[1:]:
        customer = line.strip().split(';')
        age = int(customer[0])  # Assuming age column is at index 3
        ages.append(age)

    # Divide ages into classes of interval 10
    age_classes = {}
    for age in ages:
        age_class = age // 10 * 10
        if age_class in age_classes:
            age_classes[age_class] += 1
        else:
            age_classes[age_class] = 1

    print("Histogram for age:")
    for age_class, count in age_classes.items():
        print(f"{age_class}-{age_class + 9}: {'|' * count}")

dataset = open_dataset()

headers(dataset)

count_of_customers_by_marital_category(dataset)

prepare_age_histogram(dataset)